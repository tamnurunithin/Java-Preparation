âœ…Merge Sort :
Merge Sort is a divide and conquer algorithm.
It works by:
Dividing the array into two halves.
Sorting each half recursively.
Merging the two sorted halves.

âš¡Steps (Recursive Process)
Divide â†’ Split the array into two halves until you get single elements.
Conquer â†’ Recursively sort the two halves.
Combine â†’ Merge the sorted halves back into one sorted array.


ðŸ§ Example:
class MergeSort {
    public static void mergeSort(int[] arr, int left, int right) {
        if (left < right) {
            int mid = (left + right) / 2;
            // Recursively sort two halves
            mergeSort(arr, left, mid);
            mergeSort(arr, mid + 1, right);
            // Merge sorted halves
            merge(arr, left, mid, right);
        }
    }
    private static void merge(int[] arr, int left, int mid, int right) {
        int n1 = mid - left + 1;
        int n2 = right - mid;

        int[] L = new int[n1];
        int[] R = new int[n2];

        for (int i = 0; i < n1; i++) L[i] = arr[left + i];
        for (int j = 0; j < n2; j++) R[j] = arr[mid + 1 + j];

        int i = 0, j = 0, k = left;

        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) arr[k++] = L[i++];
            else arr[k++] = R[j++];
        }

        while (i < n1) arr[k++] = L[i++];
        while (j < n2) arr[k++] = R[j++];
    }

    public static void main(String[] args) {
        int[] arr = {38, 27, 43, 3, 9, 82, 10};
        mergeSort(arr, 0, arr.length - 1);
        System.out.print("Sorted Array: ");
        for (int num : arr) System.out.print(num + " ");
    }
}
//Output:
[2, 4, 7, 9, 12, 15]
